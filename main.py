import connect4
import population

def main():
    board = connect4.createBoard()
    units = population.initializePopulation()
    runEP(units, board)

def playUnit(unitString):
    unit = population.loadUnit(unitString)
    board = connect4.createBoard()
    playGameTest(board, unit)


def playGameTest(board, unit):
    print(connect4.printBoard(board))
    while True:
        placement = int(input("team 1: "))
        full = not connect4.place(board, 1, placement)
        print(connect4.printBoard(board))
        if full:
            print("full board")
            break
        if connect4.checkWin(board) == 1:
            print("player 1 wins")
            break
        placement, states = population.decideMove(unit, board)
        full = not connect4.place(board, 2, placement)
        print(connect4.printBoard(board))
        print(states)
        if full:
            print("full board")
            break
        if connect4.checkWin(board) == 2:
            print("player 2 wins")
            break
    print(connect4.checkThrees(board, 1))
    print(connect4.checkThrees(board, 2))


def runEP(units, board):
    unitPopulation = units
    for g in range(population.generations):
        pickedUnits = population.pickUnits(10, unitPopulation)
        newUnits = population.MuLambdaRepopulate(pickedUnits, g + 1)
        newUnitsAdded = 0
        for picked in pickedUnits:
            for i in range(len(units)):
                if population.unitCompare(picked, units[i]):
                    units[i] = newUnits[newUnitsAdded]
                    newUnitsAdded += 1
                    break
        print(g)
    file = open("savedUnits.txt", "a")
    for u in unitPopulation:
        file.write(population.saveUnit(u) + "\n")
    file.close()




if __name__ == '__main__':
    main()
    #playUnit("19999|5|215|[4[25,197,50]]|[0[196,152,51]]|[1[102,136,30]]|[5[59,104,213]]|[4[114,135,16]]|[6[5,157,5]]|[1[138,37,0]]|[6[7,118,40]]|[2[184,41,60]]|[5[168,144,118]]|[0[159,67,13]]|[3[127,134,35]]|[6[161,79,110]]|[0[174,3,158]]|[5[171,175,73]]|[1[35,2,129]]|[1[46,1,99]]|[4[8,139,170]]|[1[21,191,15]]|[4[180,94,88]]|[4[191,190,158]]|[5[187,52,91]]|[6[88,11,0]]|[3[22,78,1]]|[0[16,100,78]]|[5[209,152,91]]|[4[169,86,13]]|[3[71,159,64]]|[3[148,203,135]]|[0[128,138,70]]|[2[79,25,175]]|[6[84,140,148]]|[1[19,84,180]]|[4[22,74,88]]|[2[205,0,143]]|[0[120,147,45]]|[0[56,212,96]]|[5[91,156,118]]|[4[103,148,44]]|[6[198,172,63]]|[4[12,98,174]]|[4[82,200,12]]|[1[86,107,42]]|[1[146,89,158]]|[1[208,137,166]]|[0[4,72,99]]|[2[177,200,155]]|[5[81,109,172]]|[1[158,3,105]]|[3[49,40,152]]|[2[100,183,50]]|[1[154,141,112]]|[3[67,32,129]]|[4[41,47,176]]|[6[210,72,160]]|[5[12,102,185]]|[6[133,100,47]]|[6[97,8,113]]|[1[0,159,86]]|[0[96,60,84]]|[6[184,174,53]]|[4[105,108,99]]|[6[201,109,159]]|[2[140,27,149]]|[5[209,192,212]]|[2[23,96,174]]|[4[122,61,201]]|[2[56,204,75]]|[1[49,39,164]]|[5[199,17,5]]|[1[74,66,129]]|[3[168,66,49]]|[1[28,126,63]]|[3[126,29,174]]|[6[203,130,39]]|[6[81,25,21]]|[0[203,153,144]]|[5[100,138,52]]|[6[94,62,128]]|[0[196,52,84]]|[0[133,85,185]]|[0[16,8,103]]|[0[23,189,5]]|[0[108,57,111]]|[6[185,47,133]]|[6[166,179,122]]|[3[108,153,89]]|[0[2,12,99]]|[6[185,168,8]]|[5[91,170,29]]|[5[51,23,49]]|[4[17,179,68]]|[1[122,41,125]]|[6[209,76,169]]|[6[198,134,14]]|[5[206,185,154]]|[5[97,147,131]]|[0[133,120,39]]|[0[23,97,134]]|[0[165,58,118]]|[4[186,87,48]]|[2[84,123,35]]|[6[196,191,198]]|[6[185,194,28]]|[4[169,79,4]]|[6[115,214,109]]|[0[81,151,58]]|[3[97,91,96]]|[6[165,74,143]]|[1[93,176,205]]|[0[205,127,142]]|[5[36,35,26]]|[1[171,140,189]]|[3[197,78,174]]|[5[165,172,48]]|[5[85,172,94]]|[4[181,112,1]]|[3[92,57,115]]|[6[73,115,85]]|[4[65,131,65]]|[4[95,17,23]]|[3[31,141,135]]|[2[61,185,100]]|[0[101,108,202]]|[5[64,177,164]]|[3[94,214,200]]|[2[102,130,141]]|[2[155,131,10]]|[2[118,51,35]]|[5[201,37,60]]|[6[104,168,173]]|[5[134,168,126]]|[0[144,18,181]]|[1[132,191,115]]|[0[48,10,53]]|[3[26,24,181]]|[2[56,175,163]]|[6[73,138,174]]|[0[12,150,167]]|[0[81,121,68]]|[0[39,173,137]]|[1[207,3,46]]|[0[92,26,30]]|[5[186,28,144]]|[2[122,53,73]]|[3[109,54,153]]|[4[188,141,160]]|[2[19,54,168]]|[4[189,182,146]]|[6[17,153,71]]|[0[62,193,199]]|[4[51,6,162]]|[6[9,191,136]]|[4[122,89,35]]|[5[60,177,44]]|[5[116,202,176]]|[3[124,5,40]]|[5[62,179,17]]|[4[147,13,202]]|[1[31,0,137]]|[6[60,17,79]]|[1[172,125,99]]|[6[125,198,100]]|[0[136,167,187]]|[5[81,209,100]]|[4[189,129,26]]|[0[210,38,194]]|[3[72,169,59]]|[4[28,92,157]]|[3[77,201,18]]|[0[210,210,89]]|[3[106,182,27]]|[5[99,102,92]]|[6[201,94,10]]|[6[138,130,162]]|[1[155,54,0]]|[6[62,58,20]]|[3[12,194,16]]|[4[160,112,2]]|[4[100,122,17]]|[3[71,116,75]]|[2[209,53,137]]|[6[132,35,8]]|[2[157,165,47]]|[3[139,120,90]]|[4[146,141,159]]|[5[55,155,20]]|[3[199,99,64]]|[1[7,54,76]]|[5[168,205,48]]|[5[72,204,201]]|[0[173,199,102]]|[0[161,0,183]]|[0[155,136,101]]|[4[0,130,129]]|[4[172,90,149]]|[3[138,6,10]]|[6[150,144,70]]|[1[18,125,22]]|[2[148,54,10]]|[2[133,132,30]]|[1[128,93,38]]|[2[95,84,66]]|[1[114,124,136]]|[1[179,31,99]]|[0[180,182,189]]|[6[34,42,123]]|[3[128,77,125]]|[1[198,183,187]]|[2[9,54,188]]|[6[82,123,80]]|[3[2,22,146]]|[1[194,102,103]]|[1[109,0,57]]|[1[97,146,43]]")